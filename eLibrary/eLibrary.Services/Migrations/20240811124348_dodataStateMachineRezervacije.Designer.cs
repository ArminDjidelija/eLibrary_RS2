// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eLibrary.Services.Database;

#nullable disable

namespace eLibrary.Services.Migrations
{
    [DbContext(typeof(ELibraryContext))]
    [Migration("20240811124348_dodataStateMachineRezervacije")]
    partial class dodataStateMachineRezervacije
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eLibrary.Services.Database.Autori", b =>
                {
                    b.Property<int>("AutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AutorId"));

                    b.Property<int?>("GodinaRodjenja")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("AutorId")
                        .HasName("PK__Autori__F58AE929E28C90E7");

                    b.ToTable("Autori", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.BibliotekaCitaociZabrane", b =>
                {
                    b.Property<int>("BibliotekaCitaocZabranaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BibliotekaCitaocZabranaId"));

                    b.Property<int>("BibliotekaId")
                        .HasColumnType("int");

                    b.Property<int>("CitalacId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RokZabrane")
                        .HasColumnType("datetime");

                    b.Property<string>("StateMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("BibliotekaCitaocZabranaId")
                        .HasName("PK__Bibliote__715D033F62DD5922");

                    b.HasIndex("BibliotekaId");

                    b.HasIndex("CitalacId");

                    b.ToTable("BibliotekaCitaociZabrane", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.BibliotekaKnjige", b =>
                {
                    b.Property<int>("BibliotekaKnjigaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BibliotekaKnjigaId"));

                    b.Property<int>("BibliotekaId")
                        .HasColumnType("int");

                    b.Property<int>("BrojKopija")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumDodavanja")
                        .HasColumnType("datetime");

                    b.Property<int?>("DostupnoCitaonica")
                        .HasColumnType("int");

                    b.Property<int?>("DostupnoPozajmica")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KnjigaId")
                        .HasColumnType("int");

                    b.Property<string>("Lokacija")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("BibliotekaKnjigaId")
                        .HasName("PK__Bibliote__1B347E4186C1376E");

                    b.HasIndex("BibliotekaId");

                    b.HasIndex("KnjigaId");

                    b.ToTable("BibliotekaKnjige", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.BibliotekaUposleni", b =>
                {
                    b.Property<int>("BibliotekaUposleniId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BibliotekaUposleniId"));

                    b.Property<int>("BibliotekaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DatumUposlenja")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("BibliotekaUposleniId")
                        .HasName("PK__Bibliote__304DBEB3A7395A71");

                    b.HasIndex("BibliotekaId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("BibliotekaUposleni", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.Biblioteke", b =>
                {
                    b.Property<int>("BibliotekaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BibliotekaId"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KantonId")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Opis")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Web")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("BibliotekaId")
                        .HasName("PK__Bibliote__369560083A40BDAF");

                    b.HasIndex("KantonId");

                    b.ToTable("Biblioteke", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.CiljneGrupe", b =>
                {
                    b.Property<int>("CiljnaGrupaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CiljnaGrupaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("CiljnaGrupaId")
                        .HasName("PK__CiljneGr__98C6319855A6FEAB");

                    b.ToTable("CiljneGrupe", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.CitalacKnjigaLog", b =>
                {
                    b.Property<int>("CitalacKnjigaLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CitalacKnjigaLogId"));

                    b.Property<int>("CitalacId")
                        .HasColumnType("int");

                    b.Property<int>("CitaociCitalacId")
                        .HasColumnType("int");

                    b.Property<int>("KnjigaId")
                        .HasColumnType("int");

                    b.HasKey("CitalacKnjigaLogId");

                    b.HasIndex("CitaociCitalacId");

                    b.HasIndex("KnjigaId");

                    b.ToTable("CitalacKnjigaLogs");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Citaoci", b =>
                {
                    b.Property<int>("CitalacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CitalacId"));

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Institucija")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KantonId")
                        .HasColumnType("int");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("CitalacId")
                        .HasName("PK__Citaoci__45A5BCBDC7258AF3");

                    b.HasIndex("KantonId");

                    b.ToTable("Citaoci", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.Clanarine", b =>
                {
                    b.Property<int>("ClanarinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClanarinaId"));

                    b.Property<int>("BibliotekaId")
                        .HasColumnType("int");

                    b.Property<int>("CitalacId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Iznos")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<DateTime>("Kraj")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Pocetak")
                        .HasColumnType("datetime");

                    b.Property<int>("TipClanarineBibliotekaId")
                        .HasColumnType("int");

                    b.Property<int>("UplateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("ClanarinaId")
                        .HasName("PK__Clanarin__C51E3B97E16AE754");

                    b.HasIndex("BibliotekaId");

                    b.HasIndex("CitalacId");

                    b.HasIndex("TipClanarineBibliotekaId");

                    b.HasIndex("UplateId");

                    b.ToTable("Clanarine", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.Izdavaci", b =>
                {
                    b.Property<int>("IzdavacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IzdavacId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("IzdavacId")
                        .HasName("PK__Izdavaci__6D80AC10BA28287F");

                    b.ToTable("Izdavaci", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.Jezici", b =>
                {
                    b.Property<int>("JezikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JezikId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("JezikId")
                        .HasName("PK__Jezici__E9261E091F9E1639");

                    b.ToTable("Jezici", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.Kantoni", b =>
                {
                    b.Property<int>("KantonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KantonId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Skracenica")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("KantonId")
                        .HasName("PK__Kantoni__F1D12B6139ED8790");

                    b.ToTable("Kantoni", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.KnjigaAutori", b =>
                {
                    b.Property<int>("KnjigaAutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KnjigaAutorId"));

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KnjigaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("KnjigaAutorId")
                        .HasName("PK__KnjigaAu__7CCCDDD646DBDFE0");

                    b.HasIndex("AutorId");

                    b.HasIndex("KnjigaId");

                    b.ToTable("KnjigaAutori", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.KnjigaCiljneGrupe", b =>
                {
                    b.Property<int>("KnjigaCiljnaGrupaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KnjigaCiljnaGrupaId"));

                    b.Property<int>("CiljnaGrupaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KnjigaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("KnjigaCiljnaGrupaId")
                        .HasName("PK__KnjigaCi__4EFEF21A74FFA6F1");

                    b.HasIndex("CiljnaGrupaId");

                    b.HasIndex("KnjigaId");

                    b.ToTable("KnjigaCiljneGrupe", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.KnjigaVrsteSadrzaja", b =>
                {
                    b.Property<int>("KnjigaVrstaSadrzajaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KnjigaVrstaSadrzajaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KnjigaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("VrstaSadrzajaId")
                        .HasColumnType("int");

                    b.HasKey("KnjigaVrstaSadrzajaId")
                        .HasName("PK__KnjigaVr__1CC05BC6BF4EB248");

                    b.HasIndex("KnjigaId");

                    b.HasIndex("VrstaSadrzajaId");

                    b.ToTable("KnjigaVrsteSadrzaja", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.Knjige", b =>
                {
                    b.Property<int>("KnjigaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KnjigaId"));

                    b.Property<int>("BrojIzdanja")
                        .HasColumnType("int");

                    b.Property<int>("BrojStranica")
                        .HasColumnType("int");

                    b.Property<int>("GodinaIzdanja")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Isbn")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("IzdavacId")
                        .HasColumnType("int");

                    b.Property<int>("JezikId")
                        .HasColumnType("int");

                    b.Property<string>("Napomena")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("UvezId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("VrsteGradeId")
                        .HasColumnType("int");

                    b.HasKey("KnjigaId")
                        .HasName("PK__Knjige__4A1281F3D12ED027");

                    b.HasIndex("IzdavacId");

                    b.HasIndex("JezikId");

                    b.HasIndex("UvezId");

                    b.HasIndex("VrsteGradeId");

                    b.ToTable("Knjige", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.Korisnici", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("KorisnikId")
                        .HasName("PK__Korisnic__80B06D411FF047A1");

                    b.ToTable("Korisnici", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.KorisniciUloge", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikUlogaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("UlogaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("KorisnikUlogaId")
                        .HasName("PK__Korisnic__1608726E3384F37A");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisniciUloge", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.KorisnikSacuvanaKnjiga", b =>
                {
                    b.Property<int>("KorisnikSacuvanaKnjigaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikSacuvanaKnjigaId"));

                    b.Property<int>("CitalacId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KnjigaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("KorisnikSacuvanaKnjigaId")
                        .HasName("PK__Korisnik__62EEAC2DF4451BD5");

                    b.HasIndex("CitalacId");

                    b.HasIndex("KnjigaId");

                    b.ToTable("KorisnikSacuvanaKnjiga", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.Obavijesti", b =>
                {
                    b.Property<int>("ObavijestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObavijestId"));

                    b.Property<int?>("BibliotekaId")
                        .HasColumnType("int");

                    b.Property<int?>("CitalacId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Tekst")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("ObavijestId")
                        .HasName("PK__Obavijes__99D330E047910E09");

                    b.HasIndex("BibliotekaId");

                    b.HasIndex("CitalacId");

                    b.ToTable("Obavijesti", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.Penali", b =>
                {
                    b.Property<int>("PenalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PenalId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Iznos")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PozajmicaId")
                        .HasColumnType("int");

                    b.Property<int?>("UplataId")
                        .HasColumnType("int");

                    b.Property<int?>("ValutaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("PenalId")
                        .HasName("PK__Penali__CE46DA9C31EE0FBA");

                    b.HasIndex("PozajmicaId");

                    b.HasIndex("UplataId");

                    b.HasIndex("ValutaId");

                    b.ToTable("Penali", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.Pozajmice", b =>
                {
                    b.Property<int>("PozajmicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PozajmicaId"));

                    b.Property<int>("BibliotekaKnjigaId")
                        .HasColumnType("int");

                    b.Property<int>("CitalacId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumPreuzimanja")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("MoguceProduziti")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PreporuceniDatumVracanja")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("StvarniDatumVracanja")
                        .HasColumnType("datetime");

                    b.Property<int>("Trajanje")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("PozajmicaId")
                        .HasName("PK__Pozajmic__7F2251F1A78DEC0B");

                    b.HasIndex("BibliotekaKnjigaId");

                    b.HasIndex("CitalacId");

                    b.ToTable("Pozajmice", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.ProduzenjePozajmica", b =>
                {
                    b.Property<int>("ProduzenjePozajmiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProduzenjePozajmiceId"));

                    b.Property<DateTime>("DatumZahtjeva")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("NoviRok")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Odobreno")
                        .HasColumnType("bit");

                    b.Property<int>("PozajmicaId")
                        .HasColumnType("int");

                    b.Property<int>("Produzenje")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("ProduzenjePozajmiceId")
                        .HasName("PK__Produžen__9B28C15E79BEC522");

                    b.HasIndex("PozajmicaId");

                    b.ToTable("ProduzenjePozajmica", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.Rezervacije", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RezervacijaId"));

                    b.Property<int>("BibliotekaKnjigaId")
                        .HasColumnType("int");

                    b.Property<int>("CitalacId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("Odobreno")
                        .HasColumnType("bit");

                    b.Property<bool?>("Ponistena")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RokRezervacije")
                        .HasColumnType("datetime");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("RezervacijaId")
                        .HasName("PK__Rezervac__CABA44DDF2AB12E6");

                    b.HasIndex("BibliotekaKnjigaId");

                    b.HasIndex("CitalacId");

                    b.ToTable("Rezervacije", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.TipClanarineBiblioteke", b =>
                {
                    b.Property<int>("TipClanarineBibliotekaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipClanarineBibliotekaId"));

                    b.Property<int>("BibliotekaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Iznos")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("Trajanje")
                        .HasColumnType("int");

                    b.Property<int>("ValutaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("TipClanarineBibliotekaId")
                        .HasName("PK__TipClana__4558C5A1507579E8");

                    b.HasIndex("BibliotekaId");

                    b.HasIndex("ValutaId");

                    b.ToTable("TipClanarineBiblioteke", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.TipoviUplatum", b =>
                {
                    b.Property<int>("TipUplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipUplateId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("TipUplateId")
                        .HasName("PK__TipoviUp__8E02EB6724A00276");

                    b.ToTable("TipoviUplata");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UlogaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("UlogaId")
                        .HasName("PK__Uloge__DCAB23CB2BD0FE6F");

                    b.ToTable("Uloge", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.Upiti", b =>
                {
                    b.Property<int>("UpitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UpitId"));

                    b.Property<int>("CitalacId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Odgovor")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Upit")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("UpitId")
                        .HasName("PK__Upiti__EF8C101287181849");

                    b.HasIndex("CitalacId");

                    b.ToTable("Upiti", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.Uplate", b =>
                {
                    b.Property<int>("UplataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UplataId"));

                    b.Property<int>("BibliotekaId")
                        .HasColumnType("int");

                    b.Property<int>("CitalacId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumUplate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Iznos")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<int>("TipUplateId")
                        .HasColumnType("int");

                    b.Property<int>("ValutaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("UplataId")
                        .HasName("PK__Uplate__C5B165E60EBF952A");

                    b.HasIndex("BibliotekaId");

                    b.HasIndex("CitalacId");

                    b.HasIndex("TipUplateId");

                    b.HasIndex("ValutaId");

                    b.ToTable("Uplate", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.Uvezi", b =>
                {
                    b.Property<int>("UvezId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UvezId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("UvezId")
                        .HasName("PK__Uvezi__C4713756A3F9E717");

                    b.ToTable("Uvezi", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.Valute", b =>
                {
                    b.Property<int>("ValutaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ValutaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Skracenica")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("ValutaId")
                        .HasName("PK__Valute__40CFDB4E5F926FDA");

                    b.ToTable("Valute", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.VrsteGrade", b =>
                {
                    b.Property<int>("VrstaGradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VrstaGradeId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("VrstaGradeId")
                        .HasName("PK__VrsteGra__D25BAB10DD033220");

                    b.ToTable("VrsteGrade", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.VrsteSadrzaja", b =>
                {
                    b.Property<int>("VrstaSadrzajaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VrstaSadrzajaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("VrstaSadrzajaId")
                        .HasName("PK__VrsteSad__0499598C353505B0");

                    b.ToTable("VrsteSadrzaja", (string)null);
                });

            modelBuilder.Entity("eLibrary.Services.Database.BibliotekaCitaociZabrane", b =>
                {
                    b.HasOne("eLibrary.Services.Database.Biblioteke", "Biblioteka")
                        .WithMany("BibliotekaCitaociZabranes")
                        .HasForeignKey("BibliotekaId")
                        .IsRequired()
                        .HasConstraintName("FKBiblioteka338157");

                    b.HasOne("eLibrary.Services.Database.Citaoci", "Citalac")
                        .WithMany("BibliotekaCitaociZabranes")
                        .HasForeignKey("CitalacId")
                        .IsRequired()
                        .HasConstraintName("FKBiblioteka377889");

                    b.Navigation("Biblioteka");

                    b.Navigation("Citalac");
                });

            modelBuilder.Entity("eLibrary.Services.Database.BibliotekaKnjige", b =>
                {
                    b.HasOne("eLibrary.Services.Database.Biblioteke", "Biblioteka")
                        .WithMany("BibliotekaKnjiges")
                        .HasForeignKey("BibliotekaId")
                        .IsRequired()
                        .HasConstraintName("FKBiblioteka353465");

                    b.HasOne("eLibrary.Services.Database.Knjige", "Knjiga")
                        .WithMany("BibliotekaKnjiges")
                        .HasForeignKey("KnjigaId")
                        .IsRequired()
                        .HasConstraintName("FKBiblioteka650765");

                    b.Navigation("Biblioteka");

                    b.Navigation("Knjiga");
                });

            modelBuilder.Entity("eLibrary.Services.Database.BibliotekaUposleni", b =>
                {
                    b.HasOne("eLibrary.Services.Database.Biblioteke", "Biblioteka")
                        .WithMany("BibliotekaUposlenis")
                        .HasForeignKey("BibliotekaId")
                        .IsRequired()
                        .HasConstraintName("FKBiblioteka763883");

                    b.HasOne("eLibrary.Services.Database.Korisnici", "Korisnik")
                        .WithMany("BibliotekaUposlenis")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FKBiblioteka995992");

                    b.Navigation("Biblioteka");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Biblioteke", b =>
                {
                    b.HasOne("eLibrary.Services.Database.Kantoni", "Kanton")
                        .WithMany("Bibliotekes")
                        .HasForeignKey("KantonId")
                        .IsRequired()
                        .HasConstraintName("FKBiblioteke432909");

                    b.Navigation("Kanton");
                });

            modelBuilder.Entity("eLibrary.Services.Database.CitalacKnjigaLog", b =>
                {
                    b.HasOne("eLibrary.Services.Database.Citaoci", "Citaoci")
                        .WithMany()
                        .HasForeignKey("CitaociCitalacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eLibrary.Services.Database.Knjige", "Knjiga")
                        .WithMany()
                        .HasForeignKey("KnjigaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Citaoci");

                    b.Navigation("Knjiga");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Citaoci", b =>
                {
                    b.HasOne("eLibrary.Services.Database.Kantoni", "Kanton")
                        .WithMany("Citaocis")
                        .HasForeignKey("KantonId")
                        .IsRequired()
                        .HasConstraintName("FKCitaoci7210");

                    b.Navigation("Kanton");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Clanarine", b =>
                {
                    b.HasOne("eLibrary.Services.Database.Biblioteke", "Biblioteka")
                        .WithMany("Clanarines")
                        .HasForeignKey("BibliotekaId")
                        .IsRequired()
                        .HasConstraintName("FKClanarine35451");

                    b.HasOne("eLibrary.Services.Database.Citaoci", "Citalac")
                        .WithMany("Clanarines")
                        .HasForeignKey("CitalacId")
                        .IsRequired()
                        .HasConstraintName("FKClanarine4281");

                    b.HasOne("eLibrary.Services.Database.TipClanarineBiblioteke", "TipClanarineBiblioteka")
                        .WithMany("Clanarines")
                        .HasForeignKey("TipClanarineBibliotekaId")
                        .IsRequired()
                        .HasConstraintName("FKClanarine627290");

                    b.HasOne("eLibrary.Services.Database.Uplate", "Uplate")
                        .WithMany("Clanarines")
                        .HasForeignKey("UplateId")
                        .IsRequired()
                        .HasConstraintName("FKClanarine777383");

                    b.Navigation("Biblioteka");

                    b.Navigation("Citalac");

                    b.Navigation("TipClanarineBiblioteka");

                    b.Navigation("Uplate");
                });

            modelBuilder.Entity("eLibrary.Services.Database.KnjigaAutori", b =>
                {
                    b.HasOne("eLibrary.Services.Database.Autori", "Autor")
                        .WithMany("KnjigaAutoris")
                        .HasForeignKey("AutorId")
                        .IsRequired()
                        .HasConstraintName("FKKnjigaAuto482123");

                    b.HasOne("eLibrary.Services.Database.Knjige", "Knjiga")
                        .WithMany("KnjigaAutoris")
                        .HasForeignKey("KnjigaId")
                        .IsRequired()
                        .HasConstraintName("FKKnjigaAuto167960");

                    b.Navigation("Autor");

                    b.Navigation("Knjiga");
                });

            modelBuilder.Entity("eLibrary.Services.Database.KnjigaCiljneGrupe", b =>
                {
                    b.HasOne("eLibrary.Services.Database.CiljneGrupe", "CiljnaGrupa")
                        .WithMany("KnjigaCiljneGrupes")
                        .HasForeignKey("CiljnaGrupaId")
                        .IsRequired()
                        .HasConstraintName("FKKnjigaCilj190689");

                    b.HasOne("eLibrary.Services.Database.Knjige", "Knjiga")
                        .WithMany("KnjigaCiljneGrupes")
                        .HasForeignKey("KnjigaId")
                        .IsRequired()
                        .HasConstraintName("FKKnjigaCilj768005");

                    b.Navigation("CiljnaGrupa");

                    b.Navigation("Knjiga");
                });

            modelBuilder.Entity("eLibrary.Services.Database.KnjigaVrsteSadrzaja", b =>
                {
                    b.HasOne("eLibrary.Services.Database.Knjige", "Knjiga")
                        .WithMany("KnjigaVrsteSadrzajas")
                        .HasForeignKey("KnjigaId")
                        .IsRequired()
                        .HasConstraintName("FKKnjigaVrst688589");

                    b.HasOne("eLibrary.Services.Database.VrsteSadrzaja", "VrstaSadrzaja")
                        .WithMany("KnjigaVrsteSadrzajas")
                        .HasForeignKey("VrstaSadrzajaId")
                        .IsRequired()
                        .HasConstraintName("FKKnjigaVrst124097");

                    b.Navigation("Knjiga");

                    b.Navigation("VrstaSadrzaja");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Knjige", b =>
                {
                    b.HasOne("eLibrary.Services.Database.Izdavaci", "Izdavac")
                        .WithMany("Knjiges")
                        .HasForeignKey("IzdavacId")
                        .IsRequired()
                        .HasConstraintName("FKKnjige283606");

                    b.HasOne("eLibrary.Services.Database.Jezici", "Jezik")
                        .WithMany("Knjiges")
                        .HasForeignKey("JezikId")
                        .IsRequired()
                        .HasConstraintName("FKKnjige125291");

                    b.HasOne("eLibrary.Services.Database.Uvezi", "Uvez")
                        .WithMany("Knjiges")
                        .HasForeignKey("UvezId")
                        .IsRequired()
                        .HasConstraintName("FKKnjige620887");

                    b.HasOne("eLibrary.Services.Database.VrsteGrade", "VrstaGrade")
                        .WithMany("Knjiges")
                        .HasForeignKey("VrsteGradeId")
                        .IsRequired()
                        .HasConstraintName("FK_Knjige_VrsteGrade");

                    b.Navigation("Izdavac");

                    b.Navigation("Jezik");

                    b.Navigation("Uvez");

                    b.Navigation("VrstaGrade");
                });

            modelBuilder.Entity("eLibrary.Services.Database.KorisniciUloge", b =>
                {
                    b.HasOne("eLibrary.Services.Database.Korisnici", "Korisnik")
                        .WithMany("KorisniciUloges")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FKKorisniciU569719");

                    b.HasOne("eLibrary.Services.Database.Uloge", "Uloga")
                        .WithMany("KorisniciUloges")
                        .HasForeignKey("UlogaId")
                        .IsRequired()
                        .HasConstraintName("FKKorisniciU863268");

                    b.Navigation("Korisnik");

                    b.Navigation("Uloga");
                });

            modelBuilder.Entity("eLibrary.Services.Database.KorisnikSacuvanaKnjiga", b =>
                {
                    b.HasOne("eLibrary.Services.Database.Citaoci", "Citalac")
                        .WithMany("KorisnikSacuvanaKnjigas")
                        .HasForeignKey("CitalacId")
                        .IsRequired()
                        .HasConstraintName("FKKorisnikSa44095");

                    b.HasOne("eLibrary.Services.Database.Knjige", "Knjiga")
                        .WithMany("KorisnikSacuvanaKnjigas")
                        .HasForeignKey("KnjigaId")
                        .IsRequired()
                        .HasConstraintName("FKKorisnikSa920403");

                    b.Navigation("Citalac");

                    b.Navigation("Knjiga");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Obavijesti", b =>
                {
                    b.HasOne("eLibrary.Services.Database.Biblioteke", "Biblioteka")
                        .WithMany("Obavijestis")
                        .HasForeignKey("BibliotekaId")
                        .HasConstraintName("FKObavijesti206190");

                    b.HasOne("eLibrary.Services.Database.Citaoci", "Citalac")
                        .WithMany("Obavijestis")
                        .HasForeignKey("CitalacId")
                        .HasConstraintName("FKObavijesti245922");

                    b.Navigation("Biblioteka");

                    b.Navigation("Citalac");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Penali", b =>
                {
                    b.HasOne("eLibrary.Services.Database.Pozajmice", "Pozajmica")
                        .WithMany("Penalis")
                        .HasForeignKey("PozajmicaId")
                        .IsRequired()
                        .HasConstraintName("FKPenali769294");

                    b.HasOne("eLibrary.Services.Database.Uplate", "Uplata")
                        .WithMany("Penalis")
                        .HasForeignKey("UplataId")
                        .HasConstraintName("FKPenali189592");

                    b.HasOne("eLibrary.Services.Database.Valute", "Valuta")
                        .WithMany()
                        .HasForeignKey("ValutaId");

                    b.Navigation("Pozajmica");

                    b.Navigation("Uplata");

                    b.Navigation("Valuta");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Pozajmice", b =>
                {
                    b.HasOne("eLibrary.Services.Database.BibliotekaKnjige", "BibliotekaKnjiga")
                        .WithMany("Pozajmices")
                        .HasForeignKey("BibliotekaKnjigaId")
                        .IsRequired()
                        .HasConstraintName("FKPozajmice338406");

                    b.HasOne("eLibrary.Services.Database.Citaoci", "Citalac")
                        .WithMany("Pozajmices")
                        .HasForeignKey("CitalacId")
                        .IsRequired()
                        .HasConstraintName("FKPozajmice865313");

                    b.Navigation("BibliotekaKnjiga");

                    b.Navigation("Citalac");
                });

            modelBuilder.Entity("eLibrary.Services.Database.ProduzenjePozajmica", b =>
                {
                    b.HasOne("eLibrary.Services.Database.Pozajmice", "Pozajmica")
                        .WithMany("ProduzenjePozajmicas")
                        .HasForeignKey("PozajmicaId")
                        .IsRequired()
                        .HasConstraintName("FKProduženje639386");

                    b.Navigation("Pozajmica");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Rezervacije", b =>
                {
                    b.HasOne("eLibrary.Services.Database.BibliotekaKnjige", "BibliotekaKnjiga")
                        .WithMany("Rezervacijes")
                        .HasForeignKey("BibliotekaKnjigaId")
                        .IsRequired()
                        .HasConstraintName("FKRezervacij817101");

                    b.HasOne("eLibrary.Services.Database.Citaoci", "Citalac")
                        .WithMany("Rezervacijes")
                        .HasForeignKey("CitalacId")
                        .IsRequired()
                        .HasConstraintName("FKRezervacij386618");

                    b.Navigation("BibliotekaKnjiga");

                    b.Navigation("Citalac");
                });

            modelBuilder.Entity("eLibrary.Services.Database.TipClanarineBiblioteke", b =>
                {
                    b.HasOne("eLibrary.Services.Database.Biblioteke", "Biblioteka")
                        .WithMany("TipClanarineBibliotekes")
                        .HasForeignKey("BibliotekaId")
                        .IsRequired()
                        .HasConstraintName("FKTipClanari390390");

                    b.HasOne("eLibrary.Services.Database.Valute", "Valuta")
                        .WithMany("TipClanarineBibliotekes")
                        .HasForeignKey("ValutaId")
                        .IsRequired()
                        .HasConstraintName("FKTipClanari83073");

                    b.Navigation("Biblioteka");

                    b.Navigation("Valuta");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Upiti", b =>
                {
                    b.HasOne("eLibrary.Services.Database.Citaoci", "Citalac")
                        .WithMany("Upitis")
                        .HasForeignKey("CitalacId")
                        .IsRequired()
                        .HasConstraintName("FKUpiti447286");

                    b.Navigation("Citalac");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Uplate", b =>
                {
                    b.HasOne("eLibrary.Services.Database.Biblioteke", "Biblioteka")
                        .WithMany("Uplates")
                        .HasForeignKey("BibliotekaId")
                        .IsRequired()
                        .HasConstraintName("FKUplate801485");

                    b.HasOne("eLibrary.Services.Database.Citaoci", "Citalac")
                        .WithMany("Uplates")
                        .HasForeignKey("CitalacId")
                        .IsRequired()
                        .HasConstraintName("FKUplate841217");

                    b.HasOne("eLibrary.Services.Database.TipoviUplatum", "TipUplate")
                        .WithMany("Uplates")
                        .HasForeignKey("TipUplateId")
                        .IsRequired()
                        .HasConstraintName("FKUplate728453");

                    b.HasOne("eLibrary.Services.Database.Valute", "Valuta")
                        .WithMany("Uplates")
                        .HasForeignKey("ValutaId")
                        .IsRequired()
                        .HasConstraintName("FKUplate862787");

                    b.Navigation("Biblioteka");

                    b.Navigation("Citalac");

                    b.Navigation("TipUplate");

                    b.Navigation("Valuta");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Autori", b =>
                {
                    b.Navigation("KnjigaAutoris");
                });

            modelBuilder.Entity("eLibrary.Services.Database.BibliotekaKnjige", b =>
                {
                    b.Navigation("Pozajmices");

                    b.Navigation("Rezervacijes");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Biblioteke", b =>
                {
                    b.Navigation("BibliotekaCitaociZabranes");

                    b.Navigation("BibliotekaKnjiges");

                    b.Navigation("BibliotekaUposlenis");

                    b.Navigation("Clanarines");

                    b.Navigation("Obavijestis");

                    b.Navigation("TipClanarineBibliotekes");

                    b.Navigation("Uplates");
                });

            modelBuilder.Entity("eLibrary.Services.Database.CiljneGrupe", b =>
                {
                    b.Navigation("KnjigaCiljneGrupes");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Citaoci", b =>
                {
                    b.Navigation("BibliotekaCitaociZabranes");

                    b.Navigation("Clanarines");

                    b.Navigation("KorisnikSacuvanaKnjigas");

                    b.Navigation("Obavijestis");

                    b.Navigation("Pozajmices");

                    b.Navigation("Rezervacijes");

                    b.Navigation("Upitis");

                    b.Navigation("Uplates");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Izdavaci", b =>
                {
                    b.Navigation("Knjiges");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Jezici", b =>
                {
                    b.Navigation("Knjiges");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Kantoni", b =>
                {
                    b.Navigation("Bibliotekes");

                    b.Navigation("Citaocis");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Knjige", b =>
                {
                    b.Navigation("BibliotekaKnjiges");

                    b.Navigation("KnjigaAutoris");

                    b.Navigation("KnjigaCiljneGrupes");

                    b.Navigation("KnjigaVrsteSadrzajas");

                    b.Navigation("KorisnikSacuvanaKnjigas");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Korisnici", b =>
                {
                    b.Navigation("BibliotekaUposlenis");

                    b.Navigation("KorisniciUloges");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Pozajmice", b =>
                {
                    b.Navigation("Penalis");

                    b.Navigation("ProduzenjePozajmicas");
                });

            modelBuilder.Entity("eLibrary.Services.Database.TipClanarineBiblioteke", b =>
                {
                    b.Navigation("Clanarines");
                });

            modelBuilder.Entity("eLibrary.Services.Database.TipoviUplatum", b =>
                {
                    b.Navigation("Uplates");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Uloge", b =>
                {
                    b.Navigation("KorisniciUloges");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Uplate", b =>
                {
                    b.Navigation("Clanarines");

                    b.Navigation("Penalis");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Uvezi", b =>
                {
                    b.Navigation("Knjiges");
                });

            modelBuilder.Entity("eLibrary.Services.Database.Valute", b =>
                {
                    b.Navigation("TipClanarineBibliotekes");

                    b.Navigation("Uplates");
                });

            modelBuilder.Entity("eLibrary.Services.Database.VrsteGrade", b =>
                {
                    b.Navigation("Knjiges");
                });

            modelBuilder.Entity("eLibrary.Services.Database.VrsteSadrzaja", b =>
                {
                    b.Navigation("KnjigaVrsteSadrzajas");
                });
#pragma warning restore 612, 618
        }
    }
}
